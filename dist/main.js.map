{"version":3,"sources":["webpack://particles/./src/js/canvas.js","webpack://particles/./src/js/mouse.js","webpack://particles/./src/js/Particle.js","webpack://particles/./src/index.js"],"names":["canvas","document","getElementById","ctx","getContext","alpha","width","window","innerWidth","height","innerHeight","x","y","radius","dirX","dirY","size","color","this","Math","PI","isOnCanvasX","isOnCanvasY","checkCollision","draw","dx","mouse","dy","sqrt","particlesArray","runAnimation","value","init","numberOfParticles","floor","i","random","push","Particle","animate","requestAnimationFrame","length","update","opacity","j","distance","connect","addEventListener","e","undefined"],"mappings":"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","file":"main.js","sourcesContent":["const canvas = document.getElementById('canvas1');\r\nconst ctx = canvas.getContext('2d', { alpha: false });\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\n\r\nexport {canvas,ctx};\r\n","import {canvas} from \"./canvas\";\r\n\r\nlet mouse = {\r\n  x:null,\r\n  y:null,\r\n  radius: (canvas.height /110) * (canvas.width/110)\r\n};\r\n\r\nexport default mouse;\r\n","import {ctx,canvas} from \"./canvas\";\r\nimport mouse from \"./mouse\";\r\n\r\nclass Particle {\r\n  constructor(x,y,dirX,dirY,size,color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dirX = dirX;\r\n    this.dirY = dirY;\r\n    this.size = size;\r\n    this.color = color;\r\n  }\r\n\r\n  draw() {\r\n    ctx.beginPath();\r\n    ctx.arc(this.x,this.y,this.size,0,Math.PI*2,false);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n  }\r\n\r\n  update() {\r\n    if(this.isOnCanvasX()) {\r\n      this.dirX = -this.dirX;\r\n    }\r\n    if(this.isOnCanvasY()) {\r\n      this.dirY = -this.dirY;\r\n    }\r\n\r\n    //check collision\r\n    this.checkCollision();\r\n\r\n    this.x += this.dirX;\r\n    this.y += this.dirY;\r\n\r\n    this.draw();\r\n\r\n  }\r\n\r\n  checkCollision() {\r\n    let dx = mouse.x - this.x;\r\n    let dy = mouse.y - this.y;\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    if (distance < mouse.radius + this.size) {\r\n      this.color = 'DarkOrange';\r\n      if (mouse.x < this.x && this.x < canvas.width - this.size * 10) {\r\n        this.x += 10;\r\n\r\n      }\r\n      if (mouse.x > this.x && this.x > this.size * 10) {\r\n        this.x -= 10;\r\n      }\r\n      if (mouse.y < this.y && this.y < canvas.height - this.size * 10) {\r\n        this.y += 10;\r\n      }\r\n      if (mouse.y > this.y && this.y > this.size * 10) {\r\n        this.y -= 10;\r\n      }\r\n    } else {\r\n      this.color = 'gold';\r\n    }\r\n  }\r\n\r\n  isOnCanvasX() {\r\n    return this.x > canvas.width || this.x < 0;\r\n  }\r\n\r\n  isOnCanvasY() {\r\n    return this.y > canvas.height || this.y < 0;\r\n  }\r\n}\r\n\r\nexport default Particle;\r\n","import \"./css/normalize.css\";\r\nimport \"./css/main.css\";\r\nimport mouse from \"./js/mouse\";\r\nimport Particle from \"./js/Particle\";\r\nimport {canvas,ctx} from \"./js/canvas\";\r\n\r\nlet particlesArray = [];\r\n\r\nlet runAnimation = {\r\n  value: true\r\n};\r\n\r\nwindow.addEventListener('mousemove',e => {\r\n  mouse.x = e.x;\r\n  mouse.y = e.y;\r\n});\r\n\r\nwindow.addEventListener('mouseout',e => {\r\n  mouse.x = undefined;\r\n  mouse.y = undefined;\r\n});\r\n\r\ndocument.getElementById('canvas1').addEventListener('click', function() {\r\n  runAnimation.value = !runAnimation.value;\r\n\r\n  if(runAnimation.value) {\r\n    animate();\r\n  }\r\n});\r\n\r\nfunction init() {\r\n  particlesArray = [];\r\n  let numberOfParticles = Math.floor((canvas.height * canvas.width) / 9000);\r\n  for(let i =0;i <numberOfParticles; i++) {\r\n    let size = (Math.random() * 7) + 2;\r\n    let x = (Math.random() * ((innerWidth - size * 2) - (size * 2)) + size * 2);\r\n    let y = (Math.random() * ((innerHeight - size * 2) - (size * 2)) + size * 2);\r\n\r\n    let dirX = (Math.random() * 5) - 2.5;\r\n    let dirY = (Math.random() * 5) - 2.5;\r\n\r\n    let color = 'gold';\r\n\r\n    particlesArray.push(new Particle(x,y,dirX,dirY,size,color));\r\n  }\r\n}\r\n\r\nfunction animate() {\r\n\r\n  if(runAnimation.value) {\r\n    requestAnimationFrame(animate);\r\n    ctx.clearRect(0,0,innerWidth,innerHeight);\r\n\r\n\r\n    for (let i =0; i < particlesArray.length; i++) {\r\n      particlesArray[i].update();\r\n    }\r\n    connect();\r\n  }\r\n}\r\n\r\nfunction connect () {\r\n  let opacity = 0.5;\r\n  for (let i = 0; i < particlesArray.length; i++) {\r\n    for (let j = i; j < particlesArray.length; j++) {\r\n      let distance = ((particlesArray[i].x - particlesArray[j].x) * (particlesArray[i].x - particlesArray[j].x)) + ((particlesArray[i].y - particlesArray[j].y) * (particlesArray[i].y - particlesArray[j].y));\r\n\r\n      if(distance < (canvas.width / 7) * (canvas.height/7) ) {\r\n        opacity = 1 - (distance/20000);\r\n        ctx.strokeStyle = `rgba(255, 215, 0, ${opacity})`;\r\n        ctx.lineWidth = particlesArray[i].size / 5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(particlesArray[i].x,particlesArray[i].y);\r\n        ctx.lineTo(particlesArray[j].x,particlesArray[j].y);\r\n        ctx.stroke();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nwindow.addEventListener('resize',e => {\r\n  canvas.width = innerWidth;\r\n  canvas.height = innerHeight;\r\n  mouse.radius = ((canvas.height/100) * (canvas.height/100));\r\n  init();\r\n})\r\n\r\ninit();\r\nanimate();\r\n"],"sourceRoot":""}