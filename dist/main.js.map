{"version":3,"file":"main.js","mappings":"mBAMA,QANc,CACZA,EAAE,KACFC,EAAE,KACFC,OAAQ,G,sKCoEV,QArEMC,WACJ,cAAiF,IAApEH,EAAoE,EAApEA,EAAEC,EAAkE,EAAlEA,EAAEG,EAAgE,EAAhEA,KAAKC,EAA2D,EAA3DA,KAAKC,EAAsD,EAAtDA,KAAKC,EAAiD,EAAjDA,MAAMC,EAA2C,EAA3CA,OAAOC,EAAoC,EAApCA,IAAoC,IAAhCC,eAAAA,OAAgC,MAAf,aAAe,G,4FAAA,SAC/EC,KAAKX,EAAIA,EACTW,KAAKV,EAAIA,EACTU,KAAKP,KAAOA,EACZO,KAAKN,KAAOA,EACZM,KAAKL,KAAOA,EACZK,KAAKJ,MAAQA,EACbI,KAAKH,OAASA,EACdG,KAAKF,IAAMA,EACXE,KAAKD,eAAiBA,E,yCAGxB,WACEC,KAAKF,IAAIG,YACTD,KAAKF,IAAII,IAAIF,KAAKX,EAAEW,KAAKV,EAAEU,KAAKL,KAAK,EAAU,EAARQ,KAAKC,IAAK,GACjDJ,KAAKF,IAAIO,UAAYL,KAAKJ,MAC1BI,KAAKF,IAAIQ,S,oBAGX,WACKN,KAAKO,gBACNP,KAAKP,MAAQO,KAAKP,MAEjBO,KAAKQ,gBACNR,KAAKN,MAAQM,KAAKN,MAIpBM,KAAKS,iBAELT,KAAKX,GAAKW,KAAKP,KACfO,KAAKV,GAAKU,KAAKN,KAEfM,KAAKU,S,4BAIP,WACE,IAAIC,EAAKC,EAAAA,EAAUZ,KAAKX,EACpBwB,EAAKD,EAAAA,EAAUZ,KAAKV,EACTa,KAAKW,KAAKH,EAAKA,EAAKE,EAAKA,GACzBD,EAAAA,OAAeZ,KAAKL,OACjCK,KAAKJ,MAAQI,KAAKD,eACda,EAAAA,EAAUZ,KAAKX,GAAKW,KAAKX,EAAIW,KAAKH,OAAOkB,MAAoB,GAAZf,KAAKL,OACxDK,KAAKX,GAAK,GAGRuB,EAAAA,EAAUZ,KAAKX,GAAKW,KAAKX,EAAgB,GAAZW,KAAKL,OACpCK,KAAKX,GAAK,GAERuB,EAAAA,EAAUZ,KAAKV,GAAKU,KAAKV,EAAIU,KAAKH,OAAOmB,OAAqB,GAAZhB,KAAKL,OACzDK,KAAKV,GAAK,GAERsB,EAAAA,EAAUZ,KAAKV,GAAKU,KAAKV,EAAgB,GAAZU,KAAKL,OACpCK,KAAKV,GAAK,M,yBAKhB,WACE,OAAOU,KAAKX,EAAIW,KAAKH,OAAOkB,OAASf,KAAKX,EAAI,I,yBAGhD,WACE,OAAOW,KAAKV,EAAIU,KAAKH,OAAOmB,QAAUhB,KAAKV,EAAI,O,sEAjE7CE,GCyHN,EA3He,CACb,eACA,OACA,aACA,QACA,QACA,SACA,iBACA,aACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,gBACA,WACA,WACA,YACA,cACA,aACA,aACA,aACA,eACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,cACA,cACA,UACA,aACA,OACA,YACA,cACA,WACA,UACA,YACA,QACA,QACA,WACA,gBACA,YACA,YACA,aACA,YACA,uBACA,aACA,YACA,cACA,gBACA,eACA,iBACA,OACA,YACA,QACA,UACA,mBACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,YACA,YACA,WACA,cACA,UACA,QACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,OACA,cACA,YACA,OACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,e,oQCpHF,IAAMyB,EAAK,ICgCLC,WACJ,aAcoB,6DAAJ,GAAI,IAbNC,eAAAA,OAaM,MAbW,UAaX,MAZNC,iBAAAA,OAYM,aAXNC,YAAAA,OAWM,MAXQ,IAWR,MAVNC,QAAAA,OAUM,MAVIC,OAAOC,WAUX,MATNC,QAAAA,OASM,MATIF,OAAOG,YASX,MARNC,aAAAA,OAQM,MARS,CAACC,OAAO,GAQjB,MAPNC,cAAAA,OAOM,MAPU,IAOV,MANNC,MAAAA,OAMM,aALNC,SAAAA,OAKM,MALK,EAKL,MAJNC,QAAAA,OAIM,MAJI,QAIJ,MAHNC,UAAAA,OAGM,MAHM,KAGN,MAFNC,cAAAA,OAEM,MAFU,KAEV,MADNC,aAAAA,OA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","sources":["webpack://@mtjch/bg_particles/./src/js/mouse.js","webpack://@mtjch/bg_particles/./src/js/Particle.js","webpack://@mtjch/bg_particles/./src/js/colors.js","webpack://@mtjch/bg_particles/./src/index.js","webpack://@mtjch/bg_particles/./src/js/PBackground.js"],"sourcesContent":["const mouse = {\r\n  x:null,\r\n  y:null,\r\n  radius: 1\r\n};\r\n\r\nexport default mouse;\r\n","import mouse from \"./mouse\";\r\n\r\nclass Particle {\r\n  constructor({x,y,dirX,dirY,size,color,canvas,ctx,collisionColor = 'DarkOrange'}) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dirX = dirX;\r\n    this.dirY = dirY;\r\n    this.size = size;\r\n    this.color = color;\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.collisionColor = collisionColor;\r\n  }\r\n\r\n  draw() {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(this.x,this.y,this.size,0,Math.PI*2,false);\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.fill();\r\n  }\r\n\r\n  update() {\r\n    if(this.isOnCanvasX()) {\r\n      this.dirX = -this.dirX;\r\n    }\r\n    if(this.isOnCanvasY()) {\r\n      this.dirY = -this.dirY;\r\n    }\r\n\r\n    //check collision\r\n    this.checkCollision();\r\n\r\n    this.x += this.dirX;\r\n    this.y += this.dirY;\r\n\r\n    this.draw();\r\n\r\n  }\r\n\r\n  checkCollision() {\r\n    let dx = mouse.x - this.x;\r\n    let dy = mouse.y - this.y;\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    if (distance < mouse.radius + this.size) {\r\n      this.color = this.collisionColor;\r\n      if (mouse.x < this.x && this.x < this.canvas.width - this.size * 10) {\r\n        this.x += 2;\r\n\r\n      }\r\n      if (mouse.x > this.x && this.x > this.size * 10) {\r\n        this.x -= 2;\r\n      }\r\n      if (mouse.y < this.y && this.y < this.canvas.height - this.size * 10) {\r\n        this.y += 2;\r\n      }\r\n      if (mouse.y > this.y && this.y > this.size * 10) {\r\n        this.y -= 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  isOnCanvasX() {\r\n    return this.x > this.canvas.width || this.x < 0;\r\n  }\r\n\r\n  isOnCanvasY() {\r\n    return this.y > this.canvas.height || this.y < 0;\r\n  }\r\n}\r\n\r\nexport default Particle;\r\n","const colors = [\r\n  'AntiqueWhite',\r\n  'Aqua',\r\n  'Aquamarine',\r\n  'Azure',\r\n  'Beige',\r\n  'Bisque',\r\n  'BlanchedAlmond',\r\n  'BlueViolet',\r\n  'BurlyWood',\r\n  'CadetBlue',\r\n  'Chartreuse',\r\n  'Chocolate',\r\n  'Coral',\r\n  'CornflowerBlue',\r\n  'Cornsilk',\r\n  'Crimson',\r\n  'Cyan',\r\n  'DarkCyan',\r\n  'DarkGoldenRod',\r\n  'DarkGray',\r\n  'DarkGrey',\r\n  'DarkKhaki',\r\n  'DarkMagenta',\r\n  'DarkOrange',\r\n  'DarkOrchid',\r\n  'DarkSalmon',\r\n  'DarkSeaGreen',\r\n  'DarkSlateBlue',\r\n  'DarkSlateGrey',\r\n  'DarkTurquoise',\r\n  'DarkViolet',\r\n  'DeepPink',\r\n  'DeepSkyBlue',\r\n  'DimGray',\r\n  'DimGrey',\r\n  'DodgerBlue',\r\n  'FloralWhite',\r\n  'ForestGreen',\r\n  'Fuchsia',\r\n  'GhostWhite',\r\n  'Gold',\r\n  'GoldenRod',\r\n  'GreenYellow',\r\n  'HoneyDew',\r\n  'HotPink',\r\n  'IndianRed',\r\n  'Ivory',\r\n  'Khaki',\r\n  'Lavender',\r\n  'LavenderBlush',\r\n  'LawnGreen',\r\n  'LightBlue',\r\n  'LightCoral',\r\n  'LightCyan',\r\n  'LightGoldenRodYellow',\r\n  'LightGreen',\r\n  'LightPink',\r\n  'LightSalmon',\r\n  'LightSeaGreen',\r\n  'LightSkyBlue',\r\n  'LightSteelBlue',\r\n  'Lime',\r\n  'LimeGreen',\r\n  'Linen',\r\n  'Magenta',\r\n  'MediumAquaMarine',\r\n  'MediumOrchid',\r\n  'MediumPurple',\r\n  'MediumSeaGreen',\r\n  'MediumSlateBlue',\r\n  'MediumSpringGreen',\r\n  'MediumTurquoise',\r\n  'MediumVioletRed',\r\n  'MintCream',\r\n  'MistyRose',\r\n  'Moccasin',\r\n  'NavajoWhite',\r\n  'OldLace',\r\n  'Olive',\r\n  'Orange',\r\n  'OrangeRed',\r\n  'Orchid',\r\n  'PaleGoldenRod',\r\n  'PaleGreen',\r\n  'PaleTurquoise',\r\n  'PaleVioletRed',\r\n  'PapayaWhip',\r\n  'PeachPuff',\r\n  'Peru',\r\n  'Pink',\r\n  'Plum',\r\n  'PowderBlue',\r\n  'Purple',\r\n  'RebeccaPurple',\r\n  'Red',\r\n  'RosyBrown',\r\n  'RoyalBlue',\r\n  'SaddleBrown',\r\n  'Salmon',\r\n  'SandyBrown',\r\n  'SeaGreen',\r\n  'SeaShell',\r\n  'Sienna',\r\n  'Silver',\r\n  'SkyBlue',\r\n  'SlateBlue',\r\n  'Snow',\r\n  'SpringGreen',\r\n  'SteelBlue',\r\n  'TanC',\r\n  'Teal',\r\n  'Thistle',\r\n  'Tomato',\r\n  'Turquoise',\r\n  'Violet',\r\n  'Wheat',\r\n  'White',\r\n  'WhiteSmoke',\r\n  'Yellow',\r\n  'YellowGreen',\r\n]\r\n\r\nexport default colors;\r\n","import PBackground from \"./js/PBackground\";\r\n\r\nimport './css/main.css'\r\n\r\nconst bg = new PBackground({\r\n  canvasSelector: '#canvas1',\r\n  //bgColor:'rgb(59 130 246)',\r\n  //particleColor: 'rgb(70, 138, 246)',\r\n  //canvasH: 500,\r\n  mouseInteraction: false,\r\n  speedMod: 0,\r\n  particleCount: 500,\r\n  /*lineColor: [85, 147, 247]*/});\r\nbg.init();\r\nbg.animate();\r\n\r\n//module.exports.PBackground = PBackground;\r\n","import Particle from \"./Particle\";\r\nimport mouse from \"./mouse\";\r\nimport colors from \"./colors\";\r\n\r\n/**\r\n * Class for making particle background on canvas.\r\n * Canvas element with given selector must exist on page\r\n *\r\n * @param {string} canvasSelector Selector for finding canvas element\r\n *\r\n * @param {boolean} mouseInteraction Enables interaction between particles and cursor\r\n *\r\n * @param {number} mouseRadius Size of radius around mouse\r\n *\r\n * @param {number} canvasW width of canvas\r\n *\r\n * @param {number} canvasH height of canvas\r\n *\r\n * @param {Object<boolean>} runAnimation Enables animation of particles\r\n *\r\n * @param {number} particleCount Number of particles\r\n *\r\n * @param {boolean} alpha Boolean that indicates if the canvas contains an alpha buffer.\r\n *\r\n * @param {string} bgColor Background of canvas\r\n *\r\n * @param {number} speedMod Speed modifier of particles\r\n *\r\n * @param {Array<number>} lineColor Color of connecting lines\r\n *\r\n * @param {string} particleColor Color of particles\r\n *\r\n * @param {number} lineModifier Distance of line when to connect , lower number shorter distance\r\n *\r\n * @constructor\r\n */\r\nclass PBackground {\r\n  constructor({\r\n                canvasSelector = '#canvas',\r\n                mouseInteraction = true,\r\n                mouseRadius = 100,\r\n                canvasW = window.innerWidth,\r\n                canvasH = window.innerHeight,\r\n                runAnimation = {value: true},\r\n                particleCount = 200,\r\n                alpha = true,\r\n                speedMod = 5,\r\n                bgColor = 'black',\r\n                lineColor = null,\r\n                particleColor = null,\r\n                lineModifier= 20000,\r\n              } = {}) {\r\n\r\n    this.canvasSelector = canvasSelector;\r\n    this.canvas = document.querySelector(canvasSelector);\r\n    this.runAnimation = runAnimation;\r\n    this.particlesArray = [];\r\n    this.particleCount = particleCount;\r\n    this.alpha = alpha;\r\n    this.speedMod = speedMod;\r\n    this.mouseInteraction = mouseInteraction;\r\n    this.lineModifier = lineModifier;\r\n    this.canvasW = canvasW;\r\n    this.canvasH = canvasH;\r\n\r\n    this.canvas.width = this.canvasW;\r\n    this.canvas.height = this.canvasH;\r\n\r\n    if (this.mouseInteraction) {\r\n      this.mouseRadius = mouseRadius;\r\n      mouse.radius = this.mouseRadius;\r\n    }\r\n\r\n    if (lineColor) {\r\n      this.lineColor = {\r\n        r: lineColor[0],\r\n        g: lineColor[1],\r\n        b: lineColor[2],\r\n      };\r\n    } else {\r\n      this.lineColor = {\r\n        r: Math.random() * 256,\r\n        g: Math.random() * 256,\r\n        b: Math.random() * 256,\r\n      };\r\n    }\r\n\r\n    this.particleColor = particleColor;\r\n\r\n    this.ctx = this.canvas.getContext('2d', {alpha: this.alpha});\r\n\r\n    this.canvas.style.cssText = `background:${bgColor}`;\r\n\r\n    this.initListeners();\r\n  }\r\n\r\n  initListeners() {\r\n    document.querySelector(this.canvasSelector).addEventListener('click', () => {\r\n      this.runAnimation.value = !this.runAnimation.value;\r\n\r\n      if (this.runAnimation.value) {\r\n        this.animate();\r\n      }\r\n    });\r\n\r\n    if (this.mouseInteraction) {\r\n      window.addEventListener('mousemove', e => {\r\n        mouse.x = e.x;\r\n        mouse.y = e.y;\r\n      });\r\n\r\n      window.addEventListener('mouseout', e => {\r\n        mouse.x = undefined;\r\n        mouse.y = undefined;\r\n      });\r\n    }\r\n\r\n\r\n    window.addEventListener('resize', e => {\r\n      if(this.canvas.width > window.innerWidth) {\r\n        this.canvas.width = window.innerWidth;\r\n      } else {\r\n        this.canvas.width = this.canvasW;\r\n      }\r\n\r\n      if(this.canvas.height > window.innerHeight) {\r\n        this.canvas.height = window.innerHeight;\r\n      } else {\r\n        this.canvas.height = this.canvasH;\r\n      }\r\n\r\n      mouse.radius = ((this.canvas.height / this.mouseRadius) * (this.canvas.height / this.mouseRadius));\r\n      this.init();\r\n    })\r\n  }\r\n\r\n  init() {\r\n    this.particlesArray = [];\r\n    let numberOfParticles = Math.floor(this.particleCount);\r\n\r\n    let particleColor =  colors[Math.floor(Math.random() * colors.length)];\r\n    if(this.particleColor) {\r\n      particleColor = this.particleColor;\r\n    }\r\n\r\n    let collisionColor = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n    for (let i = 0; i < numberOfParticles; i++) {\r\n      let size = (Math.random() * 7) + 2;\r\n      let x = (Math.random() * ((this.canvas.width - size * 2) - (size * 2)) + size * 2);\r\n      let y = (Math.random() * ((this.canvas.height - size * 2) - (size * 2)) + size * 2);\r\n\r\n      let dirX = (Math.random() * this.speedMod) - (this.speedMod / 2);\r\n      let dirY = (Math.random() * this.speedMod) - (this.speedMod / 2);\r\n\r\n      this.particlesArray.push(new Particle({\r\n        x: x,\r\n        y: y,\r\n        dirX: dirX,\r\n        dirY: dirY,\r\n        size: size,\r\n        color: particleColor,\r\n        canvas: this.canvas,\r\n        ctx: this.ctx,\r\n        collisionColor: collisionColor\r\n      }));\r\n    }\r\n  }\r\n\r\n  animate() {\r\n    if (this.runAnimation.value) {\r\n      requestAnimationFrame(() => this.animate());\r\n      this.ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n\r\n      for (let i = 0; i < this.particlesArray.length; i++) {\r\n        this.particlesArray[i].update();\r\n      }\r\n      this.connect();\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    let opacity = 0.5;\r\n    for (let i = 0; i < this.particlesArray.length; i++) {\r\n      for (let j = i; j < this.particlesArray.length; j++) {\r\n        let distance = (\r\n            (this.particlesArray[i].x - this.particlesArray[j].x) * (this.particlesArray[i].x - this.particlesArray[j].x)) +\r\n          ((this.particlesArray[i].y - this.particlesArray[j].y) * (this.particlesArray[i].y - this.particlesArray[j].y));\r\n\r\n        if (distance < (this.canvas.width / 7) * (this.canvas.height / 7)) {\r\n          opacity = 1 - (distance / this.lineModifier);\r\n          this.ctx.strokeStyle = `rgba(${this.lineColor.r}, ${this.lineColor.g}, ${this.lineColor.b}, ${opacity})`;\r\n          this.ctx.lineWidth = this.particlesArray[i].size / 5;\r\n          this.ctx.beginPath();\r\n          this.ctx.moveTo(this.particlesArray[i].x, this.particlesArray[i].y);\r\n          this.ctx.lineTo(this.particlesArray[j].x, this.particlesArray[j].y);\r\n          this.ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default PBackground;\r\n"],"names":["x","y","radius","Particle","dirX","dirY","size","color","canvas","ctx","collisionColor","this","beginPath","arc","Math","PI","fillStyle","fill","isOnCanvasX","isOnCanvasY","checkCollision","draw","dx","mouse","dy","sqrt","width","height","bg","PBackground","canvasSelector","mouseInteraction","mouseRadius","canvasW","window","innerWidth","canvasH","innerHeight","runAnimation","value","particleCount","alpha","speedMod","bgColor","lineColor","particleColor","lineModifier","document","querySelector","particlesArray","r","g","b","random","getContext","style","cssText","initListeners","addEventListener","animate","e","undefined","init","numberOfParticles","floor","colors","i","push","requestAnimationFrame","clearRect","length","update","connect","opacity","j","distance","strokeStyle","lineWidth","moveTo","lineTo","stroke"],"sourceRoot":""}